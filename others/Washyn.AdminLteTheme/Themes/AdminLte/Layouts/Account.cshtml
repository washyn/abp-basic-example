@using System.Globalization
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using Volo.Abp.AspNetCore.MultiTenancy
@using Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.Localization

@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.MultiTenancy
@using Volo.Abp.Localization
@using Volo.Abp.Ui.Branding

@using Volo.Abp.AspNetCore.Mvc.UI.Packages.Core
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.FontAwesome
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.JQuery
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Bundling
@using Washyn.AdminLteTheme.Bundling
@using Washyn.AdminLteTheme.Themes.AdminLte.Components.PageAlerts

@inject IBrandingProvider BrandingProvider
@inject IOptions<AbpMultiTenancyOptions> MultiTenancyOptions
@inject ICurrentTenant CurrentTenant
@inject IStringLocalizer<AbpUiMultiTenancyResource> MultiTenancyStringLocalizer
@inject ITenantResolveResultAccessor TenantResolveResultAccessor

@{
    Layout = null;
    // var containerClass = ViewBag.FluidLayout == true ? "container-fluid" : "container"; //TODO: Better and type-safe options
    var rtl = CultureHelper.IsRtl ? "rtl" : string.Empty;
    var title = ViewBag.Title == null ? BrandingProvider.AppName : ViewBag.Title;
    var showTenant = MultiTenancyOptions.Value.IsEnabled &&
                     (TenantResolveResultAccessor.Result?.AppliedResolvers?.Contains(CookieTenantResolveContributor.ContributorName) == true ||
                      TenantResolveResultAccessor.Result?.AppliedResolvers?.Contains(QueryStringTenantResolveContributor.ContributorName) == true);
}

<!DOCTYPE html>
<html lang="@CultureInfo.CurrentCulture.Name" dir="@rtl">
<head>
  @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Account)
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>@title</title>
  @if (ViewBag.Description != null)
  {
    <meta name="description" content="@(ViewBag.Description as string)"/>
  }

  
  <!-- Google Font: Source Sans Pro -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  
  <abp-style-bundle name="@StandardBundles.Styles.Global" />
  
  <!-- icheck bootstrap -->
  <link rel="stylesheet" href="~/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
  @* esto no esta en el tema por defecto *@
  @await RenderSectionAsync("style_plugins", false)
  
  <!-- Theme style -->
  <link rel="stylesheet" href="~/dist/css/adminlte.css">

  
  @await RenderSectionAsync("styles", false)

  @await Component.InvokeAsync(typeof(WidgetStylesViewComponent))

  @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Account)
  
</head>
@* el body segun las plantillas tiene login-page y register-page ambos aplican los mismos estilos, se dejara con login page o se puede agregar ambos  *@
<body class="hold-transition login-page">

@await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Account)

@* En el tema por default aqui se renderiza el menu principal *@

@if (showTenant)
{
    <div class="card shadow-sm rounded mb-3">
        <div class="card-body px-5">
            <div class="row">
                <div class="col">
                    <span style="font-size: .8em;" class="text-uppercase text-muted">@MultiTenancyStringLocalizer["Tenant"]</span><br />
                    <h6 class="m-0 d-inline-block">
                        @if (CurrentTenant.Id == null)
                        {
                            <span>
                                @MultiTenancyStringLocalizer["NotSelected"]
                            </span>
                        }
                        else
                        {
                            <strong>@(CurrentTenant.Name ?? CurrentTenant.Id.Value.ToString())</strong>
                        }
                    </h6>
                </div>
                <div class="col-auto">
                    <a id="AbpTenantSwitchLink" href="javascript:;" class="btn btn-sm mt-3 btn-outline-primary">@MultiTenancyStringLocalizer["Switch"]</a>
                </div>
            </div>
        </div>
    </div>
}

@(await Component.InvokeAsync<Washyn.AdminLteTheme.Themes.AdminLte.Components.PageAlerts.PageAlertsViewComponent>())
@await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.First, StandardLayouts.Account)
@* dentro de esta caja esta el card de login o regristro *@
@RenderBody()

@await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.Last, StandardLayouts.Account)

<abp-script-bundle name="@StandardBundles.Scripts.Global"/>

@* esto no esta en el tema por defecto *@
@await RenderSectionAsync("script_plugins", false)

<!-- AdminLTE App -->
<script src="~/dist/js/adminlte.js"></script>

<script src="~/Abp/ApplicationConfigurationScript"></script>
<script src="~/Abp/ServiceProxyScript"></script>

@await RenderSectionAsync("scripts", false)

@await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))

@await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Account)

</body>
</html>
